// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: tasks.sql

package db

import (
	"context"
)

const createTask = `-- name: CreateTask :one
INSERT INTO tasks (
                   id,
                   status,
                   payload
                   )
VALUES ($1, $2, $3)
RETURNING id, status, payload, result, created_at
`

type CreateTaskParams struct {
	ID      string `json:"id"`
	Status  string `json:"status"`
	Payload string `json:"payload"`
}

func (q *Queries) CreateTask(ctx context.Context, arg CreateTaskParams) (Task, error) {
	row := q.db.QueryRow(ctx, createTask, arg.ID, arg.Status, arg.Payload)
	var i Task
	err := row.Scan(
		&i.ID,
		&i.Status,
		&i.Payload,
		&i.Result,
		&i.CreatedAt,
	)
	return i, err
}

const deleteTask = `-- name: DeleteTask :exec
DELETE from tasks where id=$1
`

func (q *Queries) DeleteTask(ctx context.Context, id string) error {
	_, err := q.db.Exec(ctx, deleteTask, id)
	return err
}

const getTask = `-- name: GetTask :one
SELECT id, status, payload, result, created_at
FROM tasks
WHERE id = $1
`

func (q *Queries) GetTask(ctx context.Context, id string) (Task, error) {
	row := q.db.QueryRow(ctx, getTask, id)
	var i Task
	err := row.Scan(
		&i.ID,
		&i.Status,
		&i.Payload,
		&i.Result,
		&i.CreatedAt,
	)
	return i, err
}

const updateTaskResult = `-- name: UpdateTaskResult :exec
UPDATE tasks
SET
    result  = $2
WHERE id = $1
`

type UpdateTaskResultParams struct {
	ID     string `json:"id"`
	Result string `json:"result"`
}

func (q *Queries) UpdateTaskResult(ctx context.Context, arg UpdateTaskResultParams) error {
	_, err := q.db.Exec(ctx, updateTaskResult, arg.ID, arg.Result)
	return err
}

const updateTaskStatus = `-- name: UpdateTaskStatus :exec
UPDATE tasks
SET
    status  = $2
WHERE id = $1
`

type UpdateTaskStatusParams struct {
	ID     string `json:"id"`
	Status string `json:"status"`
}

func (q *Queries) UpdateTaskStatus(ctx context.Context, arg UpdateTaskStatusParams) error {
	_, err := q.db.Exec(ctx, updateTaskStatus, arg.ID, arg.Status)
	return err
}
